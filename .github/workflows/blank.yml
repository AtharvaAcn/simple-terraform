# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  pull_request:
    branches: ["main"]
    types: [labeled]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true
#   ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment:
        name: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v2.0.3

      - uses: Azure/login@v2.3.0
        with:
          client-id: ${{secrets.AZURE_CLIENT_ID}}
          tenant-id: ${{secrets.AZURE_TENANT_ID}}
          subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - name: "Run terraform init"
        run: terraform init

      - name: "Run terraform validate"
        run: terraform validate

      - name: "Run terraform plan"
        run: terraform plan -out=tfplan

      - name: "Upload plan"
        uses: actions/upload-artifact@v4.6.2
        with:
          name: "tfplan"
          path: tfplan

  apply:
    environment: production
    if: contains(github.event.pull_request.labels.*.name ,'apply')
    needs: terraform
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v2.0.3
    - uses: Azure/login@v2.3.0
      with:
        client-id: ${{secrets.AZURE_CLIENT_ID}}
        tenant-id: ${{secrets.AZURE_TENANT_ID}}
        subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    - run: terraform init

    - name: "Download plan"
      uses: actions/download-artifact@v4.3.0
      with:
        path: tfplan
        
    - run: terraform apply -auto-approve tfplan

  destroy:
    environment: production
    if: contains(github.event.pull_request.labels.*.name, 'destroy')
    needs: terraform
    runs-on: ubuntu-latest 

    steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v2.0.3
    - uses: Azure/login@v2.3.0
      with:
        client-id: ${{secrets.AZURE_CLIENT_ID}}
        tenant-id: ${{secrets.AZURE_TENANT_ID}}
        subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    - run: terraform init
    - run: terraform destroy -auto-approve
