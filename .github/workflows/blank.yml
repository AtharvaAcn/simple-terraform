# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  pull_request:
    branches: [ "main" ]
    types: [labeled]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v2.0.3

      - name: "Run terraform init"
        run: terraform init

      - name: "Run terraform fmt"
        run: terraform fmt
      
      - name: "Run terraform validate"
        run: terraform validate

      - name: "Run terraform plan"
        run: terraform plan

  apply:
      if: contains(github.event.pull_request.labels.*.name, 'apply')
      needs: terraform
      runs-on: ubuntu-latest
  
      steps:
        - uses: actions/checkout@v4
        - uses: hashicorp/setup-terraform@v2.0.3
        - run: terraform init
        - run: terraform apply -auto-approve
  
  destroy:
    if: contains(github.event.pull_request.labels.*.name, 'destroy')
    needs: terraform
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v2.0.3
      - run: terraform init
      - run: terraform destroy -auto-approve
